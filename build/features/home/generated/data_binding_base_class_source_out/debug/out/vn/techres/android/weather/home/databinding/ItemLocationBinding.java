// Generated by view binder compiler. Do not edit!
package vn.techres.android.weather.home.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.daimajia.swipe.SwipeLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.techres.android.weather.home.R;
import vn.techres.android.weather.widget.AppTextView;
import vn.techres.android.weather.widget.AppTextViewBold;

public final class ItemLocationBinding implements ViewBinding {
  @NonNull
  private final SwipeLayout rootView;

  @NonNull
  public final ImageView imvMyLocation;

  @NonNull
  public final LinearLayout llAQI;

  @NonNull
  public final LinearLayout llDelete;

  @NonNull
  public final LinearLayout llNameLocation;

  @NonNull
  public final LinearLayout llTempleteNow;

  @NonNull
  public final RelativeLayout rlBgItem;

  @NonNull
  public final SwipeLayout swParent;

  @NonNull
  public final AppTextView tvAQI;

  @NonNull
  public final AppTextView tvFeelLike;

  @NonNull
  public final AppTextView tvNameLocation;

  @NonNull
  public final AppTextView tvTemperatureDark;

  @NonNull
  public final AppTextViewBold tvTemperatureLight;

  @NonNull
  public final AppTextViewBold tvTemperatureLocation;

  private ItemLocationBinding(@NonNull SwipeLayout rootView, @NonNull ImageView imvMyLocation,
      @NonNull LinearLayout llAQI, @NonNull LinearLayout llDelete,
      @NonNull LinearLayout llNameLocation, @NonNull LinearLayout llTempleteNow,
      @NonNull RelativeLayout rlBgItem, @NonNull SwipeLayout swParent, @NonNull AppTextView tvAQI,
      @NonNull AppTextView tvFeelLike, @NonNull AppTextView tvNameLocation,
      @NonNull AppTextView tvTemperatureDark, @NonNull AppTextViewBold tvTemperatureLight,
      @NonNull AppTextViewBold tvTemperatureLocation) {
    this.rootView = rootView;
    this.imvMyLocation = imvMyLocation;
    this.llAQI = llAQI;
    this.llDelete = llDelete;
    this.llNameLocation = llNameLocation;
    this.llTempleteNow = llTempleteNow;
    this.rlBgItem = rlBgItem;
    this.swParent = swParent;
    this.tvAQI = tvAQI;
    this.tvFeelLike = tvFeelLike;
    this.tvNameLocation = tvNameLocation;
    this.tvTemperatureDark = tvTemperatureDark;
    this.tvTemperatureLight = tvTemperatureLight;
    this.tvTemperatureLocation = tvTemperatureLocation;
  }

  @Override
  @NonNull
  public SwipeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imvMyLocation;
      ImageView imvMyLocation = ViewBindings.findChildViewById(rootView, id);
      if (imvMyLocation == null) {
        break missingId;
      }

      id = R.id.llAQI;
      LinearLayout llAQI = ViewBindings.findChildViewById(rootView, id);
      if (llAQI == null) {
        break missingId;
      }

      id = R.id.llDelete;
      LinearLayout llDelete = ViewBindings.findChildViewById(rootView, id);
      if (llDelete == null) {
        break missingId;
      }

      id = R.id.llNameLocation;
      LinearLayout llNameLocation = ViewBindings.findChildViewById(rootView, id);
      if (llNameLocation == null) {
        break missingId;
      }

      id = R.id.llTempleteNow;
      LinearLayout llTempleteNow = ViewBindings.findChildViewById(rootView, id);
      if (llTempleteNow == null) {
        break missingId;
      }

      id = R.id.rlBgItem;
      RelativeLayout rlBgItem = ViewBindings.findChildViewById(rootView, id);
      if (rlBgItem == null) {
        break missingId;
      }

      SwipeLayout swParent = (SwipeLayout) rootView;

      id = R.id.tvAQI;
      AppTextView tvAQI = ViewBindings.findChildViewById(rootView, id);
      if (tvAQI == null) {
        break missingId;
      }

      id = R.id.tvFeelLike;
      AppTextView tvFeelLike = ViewBindings.findChildViewById(rootView, id);
      if (tvFeelLike == null) {
        break missingId;
      }

      id = R.id.tvNameLocation;
      AppTextView tvNameLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvNameLocation == null) {
        break missingId;
      }

      id = R.id.tvTemperatureDark;
      AppTextView tvTemperatureDark = ViewBindings.findChildViewById(rootView, id);
      if (tvTemperatureDark == null) {
        break missingId;
      }

      id = R.id.tvTemperatureLight;
      AppTextViewBold tvTemperatureLight = ViewBindings.findChildViewById(rootView, id);
      if (tvTemperatureLight == null) {
        break missingId;
      }

      id = R.id.tvTemperatureLocation;
      AppTextViewBold tvTemperatureLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvTemperatureLocation == null) {
        break missingId;
      }

      return new ItemLocationBinding((SwipeLayout) rootView, imvMyLocation, llAQI, llDelete,
          llNameLocation, llTempleteNow, rlBgItem, swParent, tvAQI, tvFeelLike, tvNameLocation,
          tvTemperatureDark, tvTemperatureLight, tvTemperatureLocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

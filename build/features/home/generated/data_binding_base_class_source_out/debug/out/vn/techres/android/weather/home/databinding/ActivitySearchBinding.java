// Generated by view binder compiler. Do not edit!
package vn.techres.android.weather.home.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.techres.android.weather.home.R;
import vn.techres.android.weather.widget.AppTextView;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SearchView acSearch;

  @NonNull
  public final LayoutNewFindLocationLayoutBinding ilLayoutFind;

  @NonNull
  public final AppTextView noData;

  @NonNull
  public final RecyclerView rcvListLocation;

  @NonNull
  public final RecyclerView rcvSuggest;

  @NonNull
  public final AppTextView tvCancel;

  private ActivitySearchBinding(@NonNull LinearLayout rootView, @NonNull SearchView acSearch,
      @NonNull LayoutNewFindLocationLayoutBinding ilLayoutFind, @NonNull AppTextView noData,
      @NonNull RecyclerView rcvListLocation, @NonNull RecyclerView rcvSuggest,
      @NonNull AppTextView tvCancel) {
    this.rootView = rootView;
    this.acSearch = acSearch;
    this.ilLayoutFind = ilLayoutFind;
    this.noData = noData;
    this.rcvListLocation = rcvListLocation;
    this.rcvSuggest = rcvSuggest;
    this.tvCancel = tvCancel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acSearch;
      SearchView acSearch = ViewBindings.findChildViewById(rootView, id);
      if (acSearch == null) {
        break missingId;
      }

      id = R.id.ilLayoutFind;
      View ilLayoutFind = ViewBindings.findChildViewById(rootView, id);
      if (ilLayoutFind == null) {
        break missingId;
      }
      LayoutNewFindLocationLayoutBinding binding_ilLayoutFind = LayoutNewFindLocationLayoutBinding.bind(ilLayoutFind);

      id = R.id.noData;
      AppTextView noData = ViewBindings.findChildViewById(rootView, id);
      if (noData == null) {
        break missingId;
      }

      id = R.id.rcvListLocation;
      RecyclerView rcvListLocation = ViewBindings.findChildViewById(rootView, id);
      if (rcvListLocation == null) {
        break missingId;
      }

      id = R.id.rcvSuggest;
      RecyclerView rcvSuggest = ViewBindings.findChildViewById(rootView, id);
      if (rcvSuggest == null) {
        break missingId;
      }

      id = R.id.tvCancel;
      AppTextView tvCancel = ViewBindings.findChildViewById(rootView, id);
      if (tvCancel == null) {
        break missingId;
      }

      return new ActivitySearchBinding((LinearLayout) rootView, acSearch, binding_ilLayoutFind,
          noData, rcvListLocation, rcvSuggest, tvCancel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

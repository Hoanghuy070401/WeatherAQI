// Generated by view binder compiler. Do not edit!
package vn.techres.android.weather.home.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.tianma8023.ssv.SunriseSunsetView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.techres.android.weather.home.R;
import vn.techres.android.weather.home.ui.drawcanvas.WinArrowView;
import vn.techres.android.weather.widget.AppTextView;
import vn.techres.android.weather.widget.AppTextViewBold;

public final class LayoutItemOtherBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final NestedScrollView ScvOther;

  @NonNull
  public final LinearLayout llGust;

  @NonNull
  public final LinearLayout llRain1h;

  @NonNull
  public final LinearLayout llRain3h;

  @NonNull
  public final LinearLayout llSnow1h;

  @NonNull
  public final LinearLayout llSnow3h;

  @NonNull
  public final LinearLayout llSunrise;

  @NonNull
  public final LinearLayout llWin;

  @NonNull
  public final SunriseSunsetView ssvSunrise;

  @NonNull
  public final AppTextViewBold tvCloudAll;

  @NonNull
  public final AppTextViewBold tvGust;

  @NonNull
  public final AppTextViewBold tvHoursSunrise;

  @NonNull
  public final AppTextViewBold tvHoursSunset;

  @NonNull
  public final AppTextViewBold tvHumidity;

  @NonNull
  public final AppTextViewBold tvPressure;

  @NonNull
  public final AppTextViewBold tvRain1h;

  @NonNull
  public final AppTextViewBold tvRain3h;

  @NonNull
  public final AppTextViewBold tvSnow1h;

  @NonNull
  public final AppTextViewBold tvSnow3h;

  @NonNull
  public final AppTextView tvSpeedsWin;

  @NonNull
  public final AppTextViewBold tvTemperatureFeeLike;

  @NonNull
  public final AppTextViewBold tvThereMayBeRain;

  @NonNull
  public final AppTextView tvWindDirection;

  @NonNull
  public final WinArrowView wavWeatherWin;

  private LayoutItemOtherBinding(@NonNull LinearLayout rootView, @NonNull NestedScrollView ScvOther,
      @NonNull LinearLayout llGust, @NonNull LinearLayout llRain1h, @NonNull LinearLayout llRain3h,
      @NonNull LinearLayout llSnow1h, @NonNull LinearLayout llSnow3h,
      @NonNull LinearLayout llSunrise, @NonNull LinearLayout llWin,
      @NonNull SunriseSunsetView ssvSunrise, @NonNull AppTextViewBold tvCloudAll,
      @NonNull AppTextViewBold tvGust, @NonNull AppTextViewBold tvHoursSunrise,
      @NonNull AppTextViewBold tvHoursSunset, @NonNull AppTextViewBold tvHumidity,
      @NonNull AppTextViewBold tvPressure, @NonNull AppTextViewBold tvRain1h,
      @NonNull AppTextViewBold tvRain3h, @NonNull AppTextViewBold tvSnow1h,
      @NonNull AppTextViewBold tvSnow3h, @NonNull AppTextView tvSpeedsWin,
      @NonNull AppTextViewBold tvTemperatureFeeLike, @NonNull AppTextViewBold tvThereMayBeRain,
      @NonNull AppTextView tvWindDirection, @NonNull WinArrowView wavWeatherWin) {
    this.rootView = rootView;
    this.ScvOther = ScvOther;
    this.llGust = llGust;
    this.llRain1h = llRain1h;
    this.llRain3h = llRain3h;
    this.llSnow1h = llSnow1h;
    this.llSnow3h = llSnow3h;
    this.llSunrise = llSunrise;
    this.llWin = llWin;
    this.ssvSunrise = ssvSunrise;
    this.tvCloudAll = tvCloudAll;
    this.tvGust = tvGust;
    this.tvHoursSunrise = tvHoursSunrise;
    this.tvHoursSunset = tvHoursSunset;
    this.tvHumidity = tvHumidity;
    this.tvPressure = tvPressure;
    this.tvRain1h = tvRain1h;
    this.tvRain3h = tvRain3h;
    this.tvSnow1h = tvSnow1h;
    this.tvSnow3h = tvSnow3h;
    this.tvSpeedsWin = tvSpeedsWin;
    this.tvTemperatureFeeLike = tvTemperatureFeeLike;
    this.tvThereMayBeRain = tvThereMayBeRain;
    this.tvWindDirection = tvWindDirection;
    this.wavWeatherWin = wavWeatherWin;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutItemOtherBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutItemOtherBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_item_other, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutItemOtherBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ScvOther;
      NestedScrollView ScvOther = ViewBindings.findChildViewById(rootView, id);
      if (ScvOther == null) {
        break missingId;
      }

      id = R.id.llGust;
      LinearLayout llGust = ViewBindings.findChildViewById(rootView, id);
      if (llGust == null) {
        break missingId;
      }

      id = R.id.llRain1h;
      LinearLayout llRain1h = ViewBindings.findChildViewById(rootView, id);
      if (llRain1h == null) {
        break missingId;
      }

      id = R.id.llRain3h;
      LinearLayout llRain3h = ViewBindings.findChildViewById(rootView, id);
      if (llRain3h == null) {
        break missingId;
      }

      id = R.id.llSnow1h;
      LinearLayout llSnow1h = ViewBindings.findChildViewById(rootView, id);
      if (llSnow1h == null) {
        break missingId;
      }

      id = R.id.llSnow3h;
      LinearLayout llSnow3h = ViewBindings.findChildViewById(rootView, id);
      if (llSnow3h == null) {
        break missingId;
      }

      id = R.id.llSunrise;
      LinearLayout llSunrise = ViewBindings.findChildViewById(rootView, id);
      if (llSunrise == null) {
        break missingId;
      }

      id = R.id.llWin;
      LinearLayout llWin = ViewBindings.findChildViewById(rootView, id);
      if (llWin == null) {
        break missingId;
      }

      id = R.id.ssvSunrise;
      SunriseSunsetView ssvSunrise = ViewBindings.findChildViewById(rootView, id);
      if (ssvSunrise == null) {
        break missingId;
      }

      id = R.id.tvCloudAll;
      AppTextViewBold tvCloudAll = ViewBindings.findChildViewById(rootView, id);
      if (tvCloudAll == null) {
        break missingId;
      }

      id = R.id.tvGust;
      AppTextViewBold tvGust = ViewBindings.findChildViewById(rootView, id);
      if (tvGust == null) {
        break missingId;
      }

      id = R.id.tvHoursSunrise;
      AppTextViewBold tvHoursSunrise = ViewBindings.findChildViewById(rootView, id);
      if (tvHoursSunrise == null) {
        break missingId;
      }

      id = R.id.tvHoursSunset;
      AppTextViewBold tvHoursSunset = ViewBindings.findChildViewById(rootView, id);
      if (tvHoursSunset == null) {
        break missingId;
      }

      id = R.id.tvHumidity;
      AppTextViewBold tvHumidity = ViewBindings.findChildViewById(rootView, id);
      if (tvHumidity == null) {
        break missingId;
      }

      id = R.id.tvPressure;
      AppTextViewBold tvPressure = ViewBindings.findChildViewById(rootView, id);
      if (tvPressure == null) {
        break missingId;
      }

      id = R.id.tvRain1h;
      AppTextViewBold tvRain1h = ViewBindings.findChildViewById(rootView, id);
      if (tvRain1h == null) {
        break missingId;
      }

      id = R.id.tvRain3h;
      AppTextViewBold tvRain3h = ViewBindings.findChildViewById(rootView, id);
      if (tvRain3h == null) {
        break missingId;
      }

      id = R.id.tvSnow1h;
      AppTextViewBold tvSnow1h = ViewBindings.findChildViewById(rootView, id);
      if (tvSnow1h == null) {
        break missingId;
      }

      id = R.id.tvSnow3h;
      AppTextViewBold tvSnow3h = ViewBindings.findChildViewById(rootView, id);
      if (tvSnow3h == null) {
        break missingId;
      }

      id = R.id.tvSpeedsWin;
      AppTextView tvSpeedsWin = ViewBindings.findChildViewById(rootView, id);
      if (tvSpeedsWin == null) {
        break missingId;
      }

      id = R.id.tvTemperatureFeeLike;
      AppTextViewBold tvTemperatureFeeLike = ViewBindings.findChildViewById(rootView, id);
      if (tvTemperatureFeeLike == null) {
        break missingId;
      }

      id = R.id.tvThereMayBeRain;
      AppTextViewBold tvThereMayBeRain = ViewBindings.findChildViewById(rootView, id);
      if (tvThereMayBeRain == null) {
        break missingId;
      }

      id = R.id.tvWindDirection;
      AppTextView tvWindDirection = ViewBindings.findChildViewById(rootView, id);
      if (tvWindDirection == null) {
        break missingId;
      }

      id = R.id.wavWeatherWin;
      WinArrowView wavWeatherWin = ViewBindings.findChildViewById(rootView, id);
      if (wavWeatherWin == null) {
        break missingId;
      }

      return new LayoutItemOtherBinding((LinearLayout) rootView, ScvOther, llGust, llRain1h,
          llRain3h, llSnow1h, llSnow3h, llSunrise, llWin, ssvSunrise, tvCloudAll, tvGust,
          tvHoursSunrise, tvHoursSunset, tvHumidity, tvPressure, tvRain1h, tvRain3h, tvSnow1h,
          tvSnow3h, tvSpeedsWin, tvTemperatureFeeLike, tvThereMayBeRain, tvWindDirection,
          wavWeatherWin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

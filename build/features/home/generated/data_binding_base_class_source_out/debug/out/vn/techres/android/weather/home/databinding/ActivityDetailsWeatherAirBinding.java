// Generated by view binder compiler. Do not edit!
package vn.techres.android.weather.home.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.github.matteobattilana.weather.WeatherView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.techres.android.weather.home.R;

public final class ActivityDetailsWeatherAirBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LayoutChartTemperatureBinding ilLineChartTemperature;

  @NonNull
  public final LayoutForecastHoursBinding ilWeatherAirHours;

  @NonNull
  public final WeatherAirNowBinding ilWeatherNow;

  @NonNull
  public final LayoutItemOtherBinding ilWeatherOther;

  @NonNull
  public final LayoutWeatherDayBinding ilWeatherSevenDay;

  @NonNull
  public final ImageView imvAdd;

  @NonNull
  public final ImageView imvHome;

  @NonNull
  public final LottieAnimationView ltWeather1;

  @NonNull
  public final RelativeLayout rlBgStyle;

  @NonNull
  public final ScrollView scvData;

  @NonNull
  public final WeatherView weatherView;

  private ActivityDetailsWeatherAirBinding(@NonNull RelativeLayout rootView,
      @NonNull LayoutChartTemperatureBinding ilLineChartTemperature,
      @NonNull LayoutForecastHoursBinding ilWeatherAirHours,
      @NonNull WeatherAirNowBinding ilWeatherNow, @NonNull LayoutItemOtherBinding ilWeatherOther,
      @NonNull LayoutWeatherDayBinding ilWeatherSevenDay, @NonNull ImageView imvAdd,
      @NonNull ImageView imvHome, @NonNull LottieAnimationView ltWeather1,
      @NonNull RelativeLayout rlBgStyle, @NonNull ScrollView scvData,
      @NonNull WeatherView weatherView) {
    this.rootView = rootView;
    this.ilLineChartTemperature = ilLineChartTemperature;
    this.ilWeatherAirHours = ilWeatherAirHours;
    this.ilWeatherNow = ilWeatherNow;
    this.ilWeatherOther = ilWeatherOther;
    this.ilWeatherSevenDay = ilWeatherSevenDay;
    this.imvAdd = imvAdd;
    this.imvHome = imvHome;
    this.ltWeather1 = ltWeather1;
    this.rlBgStyle = rlBgStyle;
    this.scvData = scvData;
    this.weatherView = weatherView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsWeatherAirBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsWeatherAirBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details_weather_air, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsWeatherAirBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ilLineChartTemperature;
      View ilLineChartTemperature = ViewBindings.findChildViewById(rootView, id);
      if (ilLineChartTemperature == null) {
        break missingId;
      }
      LayoutChartTemperatureBinding binding_ilLineChartTemperature = LayoutChartTemperatureBinding.bind(ilLineChartTemperature);

      id = R.id.ilWeatherAirHours;
      View ilWeatherAirHours = ViewBindings.findChildViewById(rootView, id);
      if (ilWeatherAirHours == null) {
        break missingId;
      }
      LayoutForecastHoursBinding binding_ilWeatherAirHours = LayoutForecastHoursBinding.bind(ilWeatherAirHours);

      id = R.id.ilWeatherNow;
      View ilWeatherNow = ViewBindings.findChildViewById(rootView, id);
      if (ilWeatherNow == null) {
        break missingId;
      }
      WeatherAirNowBinding binding_ilWeatherNow = WeatherAirNowBinding.bind(ilWeatherNow);

      id = R.id.ilWeatherOther;
      View ilWeatherOther = ViewBindings.findChildViewById(rootView, id);
      if (ilWeatherOther == null) {
        break missingId;
      }
      LayoutItemOtherBinding binding_ilWeatherOther = LayoutItemOtherBinding.bind(ilWeatherOther);

      id = R.id.ilWeatherSevenDay;
      View ilWeatherSevenDay = ViewBindings.findChildViewById(rootView, id);
      if (ilWeatherSevenDay == null) {
        break missingId;
      }
      LayoutWeatherDayBinding binding_ilWeatherSevenDay = LayoutWeatherDayBinding.bind(ilWeatherSevenDay);

      id = R.id.imvAdd;
      ImageView imvAdd = ViewBindings.findChildViewById(rootView, id);
      if (imvAdd == null) {
        break missingId;
      }

      id = R.id.imvHome;
      ImageView imvHome = ViewBindings.findChildViewById(rootView, id);
      if (imvHome == null) {
        break missingId;
      }

      id = R.id.ltWeather1;
      LottieAnimationView ltWeather1 = ViewBindings.findChildViewById(rootView, id);
      if (ltWeather1 == null) {
        break missingId;
      }

      RelativeLayout rlBgStyle = (RelativeLayout) rootView;

      id = R.id.scvData;
      ScrollView scvData = ViewBindings.findChildViewById(rootView, id);
      if (scvData == null) {
        break missingId;
      }

      id = R.id.weatherView;
      WeatherView weatherView = ViewBindings.findChildViewById(rootView, id);
      if (weatherView == null) {
        break missingId;
      }

      return new ActivityDetailsWeatherAirBinding((RelativeLayout) rootView,
          binding_ilLineChartTemperature, binding_ilWeatherAirHours, binding_ilWeatherNow,
          binding_ilWeatherOther, binding_ilWeatherSevenDay, imvAdd, imvHome, ltWeather1, rlBgStyle,
          scvData, weatherView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
